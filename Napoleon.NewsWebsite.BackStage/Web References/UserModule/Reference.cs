//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34209
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.34209 版自动生成。
// 
#pragma warning disable 1591

namespace Napoleon.NewsWebsite.BackStage.UserModule {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UserModuleServiceSoap", Namespace="http://tempuri.org/")]
    public partial class UserModuleService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CheckUserXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckUserJsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckUserAjaxJsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePwXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePwAjaxJsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePwXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePwAjaxJsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRuleXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRuleJsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRuleAjaxJsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMenuXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMenuJsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMenuAjaxJsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperationXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperationJsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperationAjaxJsonOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public UserModuleService() {
            this.Url = global::Napoleon.NewsWebsite.BackStage.Properties.Settings.Default.Napoleon_NewsWebsite_BackStage_UserModule_UserModuleService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CheckUserXmlCompletedEventHandler CheckUserXmlCompleted;
        
        /// <remarks/>
        public event CheckUserJsonCompletedEventHandler CheckUserJsonCompleted;
        
        /// <remarks/>
        public event CheckUserAjaxJsonCompletedEventHandler CheckUserAjaxJsonCompleted;
        
        /// <remarks/>
        public event ChangePwXmlCompletedEventHandler ChangePwXmlCompleted;
        
        /// <remarks/>
        public event ChangePwAjaxJsonCompletedEventHandler ChangePwAjaxJsonCompleted;
        
        /// <remarks/>
        public event UpdatePwXmlCompletedEventHandler UpdatePwXmlCompleted;
        
        /// <remarks/>
        public event UpdatePwAjaxJsonCompletedEventHandler UpdatePwAjaxJsonCompleted;
        
        /// <remarks/>
        public event GetRuleXmlCompletedEventHandler GetRuleXmlCompleted;
        
        /// <remarks/>
        public event GetRuleJsonCompletedEventHandler GetRuleJsonCompleted;
        
        /// <remarks/>
        public event GetRuleAjaxJsonCompletedEventHandler GetRuleAjaxJsonCompleted;
        
        /// <remarks/>
        public event GetMenuXmlCompletedEventHandler GetMenuXmlCompleted;
        
        /// <remarks/>
        public event GetMenuJsonCompletedEventHandler GetMenuJsonCompleted;
        
        /// <remarks/>
        public event GetMenuAjaxJsonCompletedEventHandler GetMenuAjaxJsonCompleted;
        
        /// <remarks/>
        public event GetOperationXmlCompletedEventHandler GetOperationXmlCompleted;
        
        /// <remarks/>
        public event GetOperationJsonCompletedEventHandler GetOperationJsonCompleted;
        
        /// <remarks/>
        public event GetOperationAjaxJsonCompletedEventHandler GetOperationAjaxJsonCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckUserXml", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SystemUser CheckUserXml(string userName, string passWord, string projectId) {
            object[] results = this.Invoke("CheckUserXml", new object[] {
                        userName,
                        passWord,
                        projectId});
            return ((SystemUser)(results[0]));
        }
        
        /// <remarks/>
        public void CheckUserXmlAsync(string userName, string passWord, string projectId) {
            this.CheckUserXmlAsync(userName, passWord, projectId, null);
        }
        
        /// <remarks/>
        public void CheckUserXmlAsync(string userName, string passWord, string projectId, object userState) {
            if ((this.CheckUserXmlOperationCompleted == null)) {
                this.CheckUserXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUserXmlOperationCompleted);
            }
            this.InvokeAsync("CheckUserXml", new object[] {
                        userName,
                        passWord,
                        projectId}, this.CheckUserXmlOperationCompleted, userState);
        }
        
        private void OnCheckUserXmlOperationCompleted(object arg) {
            if ((this.CheckUserXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckUserXmlCompleted(this, new CheckUserXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckUserJson", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckUserJson(string userName, string passWord, string projectId) {
            object[] results = this.Invoke("CheckUserJson", new object[] {
                        userName,
                        passWord,
                        projectId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckUserJsonAsync(string userName, string passWord, string projectId) {
            this.CheckUserJsonAsync(userName, passWord, projectId, null);
        }
        
        /// <remarks/>
        public void CheckUserJsonAsync(string userName, string passWord, string projectId, object userState) {
            if ((this.CheckUserJsonOperationCompleted == null)) {
                this.CheckUserJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUserJsonOperationCompleted);
            }
            this.InvokeAsync("CheckUserJson", new object[] {
                        userName,
                        passWord,
                        projectId}, this.CheckUserJsonOperationCompleted, userState);
        }
        
        private void OnCheckUserJsonOperationCompleted(object arg) {
            if ((this.CheckUserJsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckUserJsonCompleted(this, new CheckUserJsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckUserAjaxJson", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CheckUserAjaxJson(string userName, string passWord, string projectId) {
            this.Invoke("CheckUserAjaxJson", new object[] {
                        userName,
                        passWord,
                        projectId});
        }
        
        /// <remarks/>
        public void CheckUserAjaxJsonAsync(string userName, string passWord, string projectId) {
            this.CheckUserAjaxJsonAsync(userName, passWord, projectId, null);
        }
        
        /// <remarks/>
        public void CheckUserAjaxJsonAsync(string userName, string passWord, string projectId, object userState) {
            if ((this.CheckUserAjaxJsonOperationCompleted == null)) {
                this.CheckUserAjaxJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUserAjaxJsonOperationCompleted);
            }
            this.InvokeAsync("CheckUserAjaxJson", new object[] {
                        userName,
                        passWord,
                        projectId}, this.CheckUserAjaxJsonOperationCompleted, userState);
        }
        
        private void OnCheckUserAjaxJsonOperationCompleted(object arg) {
            if ((this.CheckUserAjaxJsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckUserAjaxJsonCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePwXml", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChangePwXml(string id, string password, string newPw) {
            object[] results = this.Invoke("ChangePwXml", new object[] {
                        id,
                        password,
                        newPw});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePwXmlAsync(string id, string password, string newPw) {
            this.ChangePwXmlAsync(id, password, newPw, null);
        }
        
        /// <remarks/>
        public void ChangePwXmlAsync(string id, string password, string newPw, object userState) {
            if ((this.ChangePwXmlOperationCompleted == null)) {
                this.ChangePwXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePwXmlOperationCompleted);
            }
            this.InvokeAsync("ChangePwXml", new object[] {
                        id,
                        password,
                        newPw}, this.ChangePwXmlOperationCompleted, userState);
        }
        
        private void OnChangePwXmlOperationCompleted(object arg) {
            if ((this.ChangePwXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePwXmlCompleted(this, new ChangePwXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePwAjaxJson", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangePwAjaxJson(string id, string password, string newPw) {
            this.Invoke("ChangePwAjaxJson", new object[] {
                        id,
                        password,
                        newPw});
        }
        
        /// <remarks/>
        public void ChangePwAjaxJsonAsync(string id, string password, string newPw) {
            this.ChangePwAjaxJsonAsync(id, password, newPw, null);
        }
        
        /// <remarks/>
        public void ChangePwAjaxJsonAsync(string id, string password, string newPw, object userState) {
            if ((this.ChangePwAjaxJsonOperationCompleted == null)) {
                this.ChangePwAjaxJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePwAjaxJsonOperationCompleted);
            }
            this.InvokeAsync("ChangePwAjaxJson", new object[] {
                        id,
                        password,
                        newPw}, this.ChangePwAjaxJsonOperationCompleted, userState);
        }
        
        private void OnChangePwAjaxJsonOperationCompleted(object arg) {
            if ((this.ChangePwAjaxJsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePwAjaxJsonCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePwXml", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdatePwXml(string passWord, string ids) {
            object[] results = this.Invoke("UpdatePwXml", new object[] {
                        passWord,
                        ids});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePwXmlAsync(string passWord, string ids) {
            this.UpdatePwXmlAsync(passWord, ids, null);
        }
        
        /// <remarks/>
        public void UpdatePwXmlAsync(string passWord, string ids, object userState) {
            if ((this.UpdatePwXmlOperationCompleted == null)) {
                this.UpdatePwXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePwXmlOperationCompleted);
            }
            this.InvokeAsync("UpdatePwXml", new object[] {
                        passWord,
                        ids}, this.UpdatePwXmlOperationCompleted, userState);
        }
        
        private void OnUpdatePwXmlOperationCompleted(object arg) {
            if ((this.UpdatePwXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePwXmlCompleted(this, new UpdatePwXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePwAjaxJson", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdatePwAjaxJson(string passWord, string ids) {
            this.Invoke("UpdatePwAjaxJson", new object[] {
                        passWord,
                        ids});
        }
        
        /// <remarks/>
        public void UpdatePwAjaxJsonAsync(string passWord, string ids) {
            this.UpdatePwAjaxJsonAsync(passWord, ids, null);
        }
        
        /// <remarks/>
        public void UpdatePwAjaxJsonAsync(string passWord, string ids, object userState) {
            if ((this.UpdatePwAjaxJsonOperationCompleted == null)) {
                this.UpdatePwAjaxJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePwAjaxJsonOperationCompleted);
            }
            this.InvokeAsync("UpdatePwAjaxJson", new object[] {
                        passWord,
                        ids}, this.UpdatePwAjaxJsonOperationCompleted, userState);
        }
        
        private void OnUpdatePwAjaxJsonOperationCompleted(object arg) {
            if ((this.UpdatePwAjaxJsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePwAjaxJsonCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRuleXml", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SystemUserAndRule GetRuleXml(string userId, string projectId) {
            object[] results = this.Invoke("GetRuleXml", new object[] {
                        userId,
                        projectId});
            return ((SystemUserAndRule)(results[0]));
        }
        
        /// <remarks/>
        public void GetRuleXmlAsync(string userId, string projectId) {
            this.GetRuleXmlAsync(userId, projectId, null);
        }
        
        /// <remarks/>
        public void GetRuleXmlAsync(string userId, string projectId, object userState) {
            if ((this.GetRuleXmlOperationCompleted == null)) {
                this.GetRuleXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRuleXmlOperationCompleted);
            }
            this.InvokeAsync("GetRuleXml", new object[] {
                        userId,
                        projectId}, this.GetRuleXmlOperationCompleted, userState);
        }
        
        private void OnGetRuleXmlOperationCompleted(object arg) {
            if ((this.GetRuleXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRuleXmlCompleted(this, new GetRuleXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRuleJson", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRuleJson(string userId, string projectId) {
            object[] results = this.Invoke("GetRuleJson", new object[] {
                        userId,
                        projectId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRuleJsonAsync(string userId, string projectId) {
            this.GetRuleJsonAsync(userId, projectId, null);
        }
        
        /// <remarks/>
        public void GetRuleJsonAsync(string userId, string projectId, object userState) {
            if ((this.GetRuleJsonOperationCompleted == null)) {
                this.GetRuleJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRuleJsonOperationCompleted);
            }
            this.InvokeAsync("GetRuleJson", new object[] {
                        userId,
                        projectId}, this.GetRuleJsonOperationCompleted, userState);
        }
        
        private void OnGetRuleJsonOperationCompleted(object arg) {
            if ((this.GetRuleJsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRuleJsonCompleted(this, new GetRuleJsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRuleAjaxJson", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetRuleAjaxJson(string userId, string projectId) {
            this.Invoke("GetRuleAjaxJson", new object[] {
                        userId,
                        projectId});
        }
        
        /// <remarks/>
        public void GetRuleAjaxJsonAsync(string userId, string projectId) {
            this.GetRuleAjaxJsonAsync(userId, projectId, null);
        }
        
        /// <remarks/>
        public void GetRuleAjaxJsonAsync(string userId, string projectId, object userState) {
            if ((this.GetRuleAjaxJsonOperationCompleted == null)) {
                this.GetRuleAjaxJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRuleAjaxJsonOperationCompleted);
            }
            this.InvokeAsync("GetRuleAjaxJson", new object[] {
                        userId,
                        projectId}, this.GetRuleAjaxJsonOperationCompleted, userState);
        }
        
        private void OnGetRuleAjaxJsonOperationCompleted(object arg) {
            if ((this.GetRuleAjaxJsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRuleAjaxJsonCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMenuXml", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMenuXml(string ruleId, string projectId) {
            object[] results = this.Invoke("GetMenuXml", new object[] {
                        ruleId,
                        projectId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMenuXmlAsync(string ruleId, string projectId) {
            this.GetMenuXmlAsync(ruleId, projectId, null);
        }
        
        /// <remarks/>
        public void GetMenuXmlAsync(string ruleId, string projectId, object userState) {
            if ((this.GetMenuXmlOperationCompleted == null)) {
                this.GetMenuXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMenuXmlOperationCompleted);
            }
            this.InvokeAsync("GetMenuXml", new object[] {
                        ruleId,
                        projectId}, this.GetMenuXmlOperationCompleted, userState);
        }
        
        private void OnGetMenuXmlOperationCompleted(object arg) {
            if ((this.GetMenuXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMenuXmlCompleted(this, new GetMenuXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMenuJson", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMenuJson(string ruleId, string projectId) {
            object[] results = this.Invoke("GetMenuJson", new object[] {
                        ruleId,
                        projectId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMenuJsonAsync(string ruleId, string projectId) {
            this.GetMenuJsonAsync(ruleId, projectId, null);
        }
        
        /// <remarks/>
        public void GetMenuJsonAsync(string ruleId, string projectId, object userState) {
            if ((this.GetMenuJsonOperationCompleted == null)) {
                this.GetMenuJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMenuJsonOperationCompleted);
            }
            this.InvokeAsync("GetMenuJson", new object[] {
                        ruleId,
                        projectId}, this.GetMenuJsonOperationCompleted, userState);
        }
        
        private void OnGetMenuJsonOperationCompleted(object arg) {
            if ((this.GetMenuJsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMenuJsonCompleted(this, new GetMenuJsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMenuAjaxJson", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetMenuAjaxJson(string ruleId, string projectId) {
            this.Invoke("GetMenuAjaxJson", new object[] {
                        ruleId,
                        projectId});
        }
        
        /// <remarks/>
        public void GetMenuAjaxJsonAsync(string ruleId, string projectId) {
            this.GetMenuAjaxJsonAsync(ruleId, projectId, null);
        }
        
        /// <remarks/>
        public void GetMenuAjaxJsonAsync(string ruleId, string projectId, object userState) {
            if ((this.GetMenuAjaxJsonOperationCompleted == null)) {
                this.GetMenuAjaxJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMenuAjaxJsonOperationCompleted);
            }
            this.InvokeAsync("GetMenuAjaxJson", new object[] {
                        ruleId,
                        projectId}, this.GetMenuAjaxJsonOperationCompleted, userState);
        }
        
        private void OnGetMenuAjaxJsonOperationCompleted(object arg) {
            if ((this.GetMenuAjaxJsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMenuAjaxJsonCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOperationXml", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SystemMenu[] GetOperationXml(string ruleId, string menuId, string projectId) {
            object[] results = this.Invoke("GetOperationXml", new object[] {
                        ruleId,
                        menuId,
                        projectId});
            return ((SystemMenu[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOperationXmlAsync(string ruleId, string menuId, string projectId) {
            this.GetOperationXmlAsync(ruleId, menuId, projectId, null);
        }
        
        /// <remarks/>
        public void GetOperationXmlAsync(string ruleId, string menuId, string projectId, object userState) {
            if ((this.GetOperationXmlOperationCompleted == null)) {
                this.GetOperationXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperationXmlOperationCompleted);
            }
            this.InvokeAsync("GetOperationXml", new object[] {
                        ruleId,
                        menuId,
                        projectId}, this.GetOperationXmlOperationCompleted, userState);
        }
        
        private void OnGetOperationXmlOperationCompleted(object arg) {
            if ((this.GetOperationXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperationXmlCompleted(this, new GetOperationXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOperationJson", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOperationJson(string ruleId, string menuId, string projectId) {
            object[] results = this.Invoke("GetOperationJson", new object[] {
                        ruleId,
                        menuId,
                        projectId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOperationJsonAsync(string ruleId, string menuId, string projectId) {
            this.GetOperationJsonAsync(ruleId, menuId, projectId, null);
        }
        
        /// <remarks/>
        public void GetOperationJsonAsync(string ruleId, string menuId, string projectId, object userState) {
            if ((this.GetOperationJsonOperationCompleted == null)) {
                this.GetOperationJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperationJsonOperationCompleted);
            }
            this.InvokeAsync("GetOperationJson", new object[] {
                        ruleId,
                        menuId,
                        projectId}, this.GetOperationJsonOperationCompleted, userState);
        }
        
        private void OnGetOperationJsonOperationCompleted(object arg) {
            if ((this.GetOperationJsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperationJsonCompleted(this, new GetOperationJsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOperationAjaxJson", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetOperationAjaxJson(string ruleId, string menuId, string projectId) {
            this.Invoke("GetOperationAjaxJson", new object[] {
                        ruleId,
                        menuId,
                        projectId});
        }
        
        /// <remarks/>
        public void GetOperationAjaxJsonAsync(string ruleId, string menuId, string projectId) {
            this.GetOperationAjaxJsonAsync(ruleId, menuId, projectId, null);
        }
        
        /// <remarks/>
        public void GetOperationAjaxJsonAsync(string ruleId, string menuId, string projectId, object userState) {
            if ((this.GetOperationAjaxJsonOperationCompleted == null)) {
                this.GetOperationAjaxJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperationAjaxJsonOperationCompleted);
            }
            this.InvokeAsync("GetOperationAjaxJson", new object[] {
                        ruleId,
                        menuId,
                        projectId}, this.GetOperationAjaxJsonOperationCompleted, userState);
        }
        
        private void OnGetOperationAjaxJsonOperationCompleted(object arg) {
            if ((this.GetOperationAjaxJsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperationAjaxJsonCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SystemUser {
        
        private string idField;
        
        private string projectIdField;
        
        private string userNameField;
        
        private string passWordsField;
        
        private string realNameField;
        
        private string mobilePhoneField;
        
        private string isUseField;
        
        private string userAddressField;
        
        private decimal sortField;
        
        private string remarkField;
        
        private string operatorField;
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string PassWords {
            get {
                return this.passWordsField;
            }
            set {
                this.passWordsField = value;
            }
        }
        
        /// <remarks/>
        public string RealName {
            get {
                return this.realNameField;
            }
            set {
                this.realNameField = value;
            }
        }
        
        /// <remarks/>
        public string MobilePhone {
            get {
                return this.mobilePhoneField;
            }
            set {
                this.mobilePhoneField = value;
            }
        }
        
        /// <remarks/>
        public string IsUse {
            get {
                return this.isUseField;
            }
            set {
                this.isUseField = value;
            }
        }
        
        /// <remarks/>
        public string UserAddress {
            get {
                return this.userAddressField;
            }
            set {
                this.userAddressField = value;
            }
        }
        
        /// <remarks/>
        public decimal Sort {
            get {
                return this.sortField;
            }
            set {
                this.sortField = value;
            }
        }
        
        /// <remarks/>
        public string Remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
        
        /// <remarks/>
        public string Operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SystemMenu {
        
        private string projectIdField;
        
        private string idField;
        
        private string nameField;
        
        private string parentIdField;
        
        private string htmlIdField;
        
        private string urlField;
        
        private string iconField;
        
        private decimal sortField;
        
        private string remarkField;
        
        private string operatorField;
        
        /// <remarks/>
        public string ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string ParentId {
            get {
                return this.parentIdField;
            }
            set {
                this.parentIdField = value;
            }
        }
        
        /// <remarks/>
        public string HtmlId {
            get {
                return this.htmlIdField;
            }
            set {
                this.htmlIdField = value;
            }
        }
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public string Icon {
            get {
                return this.iconField;
            }
            set {
                this.iconField = value;
            }
        }
        
        /// <remarks/>
        public decimal Sort {
            get {
                return this.sortField;
            }
            set {
                this.sortField = value;
            }
        }
        
        /// <remarks/>
        public string Remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
        
        /// <remarks/>
        public string Operator {
            get {
                return this.operatorField;
            }
            set {
                this.operatorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SystemUserAndRule {
        
        private string projectIdField;
        
        private string idField;
        
        private string userIdField;
        
        private string ruleIdField;
        
        private string ruleParentIdField;
        
        /// <remarks/>
        public string ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string RuleId {
            get {
                return this.ruleIdField;
            }
            set {
                this.ruleIdField = value;
            }
        }
        
        /// <remarks/>
        public string RuleParentId {
            get {
                return this.ruleParentIdField;
            }
            set {
                this.ruleParentIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CheckUserXmlCompletedEventHandler(object sender, CheckUserXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckUserXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckUserXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SystemUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SystemUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CheckUserJsonCompletedEventHandler(object sender, CheckUserJsonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckUserJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckUserJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CheckUserAjaxJsonCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ChangePwXmlCompletedEventHandler(object sender, ChangePwXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePwXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePwXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ChangePwAjaxJsonCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UpdatePwXmlCompletedEventHandler(object sender, UpdatePwXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePwXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePwXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UpdatePwAjaxJsonCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetRuleXmlCompletedEventHandler(object sender, GetRuleXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRuleXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRuleXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SystemUserAndRule Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SystemUserAndRule)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetRuleJsonCompletedEventHandler(object sender, GetRuleJsonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRuleJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRuleJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetRuleAjaxJsonCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetMenuXmlCompletedEventHandler(object sender, GetMenuXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMenuXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMenuXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetMenuJsonCompletedEventHandler(object sender, GetMenuJsonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMenuJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMenuJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetMenuAjaxJsonCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetOperationXmlCompletedEventHandler(object sender, GetOperationXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOperationXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOperationXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SystemMenu[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SystemMenu[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetOperationJsonCompletedEventHandler(object sender, GetOperationJsonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOperationJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOperationJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetOperationAjaxJsonCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591